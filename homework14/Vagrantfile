# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "logsrv" do |logsrv|
     logsrv.vm.box = "centos/7"
     logsrv.vm.network "private_network", ip: "192.168.50.20"
     logsrv.vm.hostname = "logsrv"
     logsrv.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--name", "logsrv"]
        vb.memory = "2048"
     end
     logsrv.vm.provision "shell", inline: <<-SHELL
     yum install -y epel-release
	 yum install -y update
	 yum install -y vim ansible net-tools yum install -y java-1.8.0-openjdk redhat-lsb-core bind-utils mc
	 rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
	 echo "192.168.50.15  web.kvaido.com  web" | sudo tee -a /etc/hosts
	 echo "192.168.50.20  logsrv.kvaido.com  logsrv" | sudo tee -a /etc/hosts
     sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
     systemctl restart sshd
	 setenforce 0
     sed -i --follow-symlinks 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux
	 systemctl disable firewalld >/dev/null 2>&1
     systemctl stop firewalld
	 cp -R /vagrant ~/
	 SHELL
	 logsrv.vm.provision "shell", path: "repo.sh"
     logsrv.vm.provision "ansible_local" do |ansible|
     ansible.playbook = "elk.yml"
	 end
	 end

  config.vm.define "web" do |web|
     web.vm.box = "centos/7"
     web.vm.network "private_network", ip: "192.168.50.15"
     web.vm.hostname = "web"
     web.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--name", "web"]
        vb.memory = "1024"
     end
     web.vm.provision "shell", inline: <<-SHELL
     yum install -y epel-release
	 yum install -y update
	 yum install -y vim ansible net-tools redhat-lsb-core bind-utils mc
	 echo "192.168.50.15  web.kvaido.com  web" | sudo tee -a /etc/hosts
	 echo "192.168.50.20  logsrv.kvaido.com  logsrv" | sudo tee -a /etc/hosts
	 mkdir -p ~root/.ssh; cp ~vagrant/.ssh/auth* ~root/.ssh
     sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
     systemctl restart sshd
	 setenforce 0
     sed -i --follow-symlinks 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux
	 systemctl disable firewalld >/dev/null 2>&1
     systemctl stop firewalld
	 cp -R /vagrant ~/
	 SHELL
     web.vm.provision "shell", path: "repo.sh"
     web.vm.provision "ansible_local" do |ansible|
     ansible.playbook = "web_nginx.yml"
	 end
     end
 end